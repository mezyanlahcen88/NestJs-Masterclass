var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,0.98,1,2.11]],["body/controllers/AppController.html",[0,1.511,1,3.253,2,1.181,3,0.345,4,0.299,5,0.299,6,3.272,7,0.859,8,2.068,9,4.864,10,1.617,11,0.03,12,1.092,13,3.905,14,1.617,15,1.633,16,0.566,17,0.79,18,2.944,19,3.272,20,0.345,21,0.08,22,3.272,23,1.755,24,1.617,25,3.905,26,0.023,27,0.023]],["title/modules/AppModule.html",[28,0.98,29,2.11]],["body/modules/AppModule.html",[1,3.1,2,1.245,3,0.258,4,0.224,5,0.224,11,0.03,16,0.656,17,0.592,18,3.016,19,2.452,20,0.258,21,0.06,26,0.019,27,0.019,28,1.44,29,4.111,30,1.212,31,1.315,32,1.564,33,1.564,34,1.315,35,2.544,36,1.564,37,2.452,38,2.452,39,2.452,40,3.016,41,3.316,42,3.316,43,2.76,44,2.2,45,1.564,46,1.431,47,2.927,48,2.68,49,2.927,50,2.927,51,2.927,52,2.927,53,2.927]],["title/injectables/AppService.html",[18,1.732,54,1.145]],["body/injectables/AppService.html",[3,0.364,4,0.315,5,0.315,7,0.906,8,2.138,9,4.959,11,0.029,12,1.152,14,1.704,15,1.688,16,0.466,17,0.833,18,2.761,20,0.364,21,0.084,24,1.704,26,0.024,27,0.024,54,1.825,55,2.2,56,3.449,57,4.117,58,4.117,59,4.117,60,4.117]],["title/controllers/AuthController.html",[0,0.98,61,2.11]],["body/controllers/AuthController.html",[0,1.238,2,1.238,3,0.362,4,0.313,5,0.313,11,0.03,16,0.583,17,0.829,20,0.362,21,0.084,23,1.84,26,0.024,27,0.024,61,3.352,62,3.431,63,2.406,64,4.313,65,2.753,66,3.431,67,4.095,68,2.188,69,2.188,70,2.406,71,2.188]],["title/modules/AuthModule.html",[28,0.98,40,1.732]],["body/modules/AuthModule.html",[2,1.371,3,0.297,4,0.258,5,0.258,11,0.03,16,0.621,17,0.682,20,0.297,21,0.069,26,0.021,27,0.021,28,1.55,30,1.394,31,1.513,32,1.8,33,1.8,34,1.513,35,2.739,36,2.739,40,3.218,43,2.217,44,2.423,45,1.8,46,1.647,48,2.193,61,3.337,65,3.115,66,2.822,72,2.822,73,2.822,74,2.822,75,3.368,76,2.952,77,3.368,78,2.822]],["title/injectables/AuthService.html",[54,1.145,65,1.585]],["body/injectables/AuthService.html",[3,0.258,4,0.224,5,0.224,7,0.644,8,1.704,11,0.03,12,1.332,14,1.704,15,1.993,16,0.466,17,0.592,20,0.258,21,0.06,23,1.315,24,1.704,26,0.019,27,0.019,54,1.454,55,1.564,65,2.013,68,2.2,69,1.564,71,1.564,76,1.906,79,2.452,80,3.316,81,4.327,82,4.76,83,2.452,84,2.605,85,2.927,86,2.013,87,1.849,88,1.245,89,1.573,90,2.927,91,2.927,92,4.115,93,3.988,94,2.544,95,2.927,96,2.139,97,2.452,98,2.452,99,2.927,100,2.452,101,2.139,102,2.139,103,2.927,104,2.927,105,2.139]],["title/classes/Cat.html",[21,0.066,106,2.11]],["body/classes/Cat.html",[3,0.423,4,0.367,5,0.367,11,0.028,20,0.423,21,0.098,26,0.026,27,0.026,106,3.69,107,1.832,108,4.015]],["title/controllers/CatsController.html",[0,0.98,109,2.11]],["body/controllers/CatsController.html",[0,0.71,2,0.71,3,0.207,4,0.18,5,0.18,7,0.517,8,1.452,10,2.063,11,0.03,12,1.394,14,2.063,15,1.861,16,0.527,17,0.475,20,0.207,21,0.048,22,1.967,23,1.055,24,2.063,26,0.016,27,0.016,63,1.379,86,2.278,87,2.093,88,1.409,89,1.78,94,2.795,109,2.284,110,1.967,111,1.967,112,1.874,113,3.033,114,2.938,115,2.938,116,2.938,117,1.967,118,2.795,119,2.053,120,2.348,121,2.348,122,1.967,123,3.507,124,2.348,125,1.967,126,3.507,127,2.348,128,1.967,129,3.273,130,3.507,131,2.348,132,2.564,133,1.716,134,1.716,135,2.348,136,2.244,137,1.967,138,1.967,139,2.564,140,1.967,141,2.348,142,2.348,143,2.348,144,2.348,145,2.348,146,2.348,147,2.348,148,2.348,149,2.348,150,2.348]],["title/modules/CatsModule.html",[28,0.98,41,1.904]],["body/modules/CatsModule.html",[2,1.463,3,0.328,4,0.284,5,0.284,11,0.029,16,0.609,17,0.752,20,0.328,21,0.076,26,0.022,27,0.022,28,1.626,30,1.538,31,1.669,32,1.985,33,1.985,34,1.669,35,2.874,36,1.985,41,3.558,44,2.585,45,1.985,46,1.816,109,3.502,136,3.237,137,3.112,151,3.112,152,3.112,153,3.714,154,3.714]],["title/injectables/CatsService.html",[54,1.145,136,1.732]],["body/injectables/CatsService.html",[3,0.222,4,0.193,5,0.193,7,0.554,8,1.53,11,0.03,12,1.436,14,2.295,15,1.678,16,0.495,17,0.51,20,0.222,21,0.052,24,2.125,26,0.017,27,0.017,54,1.306,55,1.346,86,2.357,87,2.166,88,1.458,89,1.842,94,2.867,106,3.139,111,2.11,112,1.975,113,3.139,114,3.096,115,3.096,116,3.096,117,3.096,118,2.743,122,3.096,125,3.096,128,3.096,129,3.257,136,1.975,138,2.11,139,2.701,140,2.11,155,2.11,156,2.519,157,2.519,158,3.101,159,2.519,160,2.519,161,2.519,162,5.132,163,2.519,164,1.64,165,1.841,166,2.519]],["title/classes/CreateCatDto.html",[21,0.066,118,1.732]],["body/classes/CreateCatDto.html",[3,0.421,4,0.365,5,0.365,11,0.027,20,0.421,21,0.098,26,0.026,27,0.026,107,1.82,118,3.017,167,3.99,168,3.481]],["title/classes/CreatePostDto.html",[21,0.066,169,1.904]],["body/classes/CreatePostDto.html",[3,0.125,4,0.108,5,0.108,7,0.311,10,2.063,11,0.03,12,1.394,15,1.771,16,0.475,20,0.125,21,0.062,26,0.011,27,0.011,88,1.685,89,1.998,105,2.563,107,0.54,112,0.755,119,1.472,169,1.379,170,3.739,171,1.033,172,1.472,173,2.523,174,3.011,175,3.011,176,3.902,177,3.011,178,3.011,179,3.891,180,2.201,181,3.011,182,2.523,183,1.413,184,1.413,185,1.413,186,1.413,187,2.284,188,1.413,189,2.347,190,1.716,191,1.967,192,2.347,193,1.413,194,1.413,195,1.413,196,2.347,197,2.378,198,2.938,199,3.507,200,1.529,201,1.967,202,1.413,203,1.413,204,2.347,205,2.347,206,2.347,207,2.347,208,2.347,209,3.069,210,2.347,211,2.347,212,1.413,213,1.413,214,1.413,215,2.347,216,2.347,217,3.011,218,2.347,219,2.347,220,1.413,221,1.413,222,1.413,223,3.507,224,2.938,225,1.967,226,2.347,227,2.347,228,2.347,229,2.347,230,2.347,231,3.011,232,1.413,233,3.26,234,1.967,235,1.967,236,1.967,237,1.413,238,1.413,239,1.413,240,1.413,241,3.507,242,1.413,243,1.413,244,1.413,245,2.347,246,1.413,247,3.011,248,1.413,249,2.347,250,2.347,251,2.534,252,3.252,253,2.844,254,2.347,255,1.184,256,1.184,257,2.347,258,0.755,259,1.413,260,1.033,261,1.033,262,1.413,263,3.069,264,3.517,265,0.755,266,1.413,267,2.347,268,1.184,269,1.413,270,1.413,271,1.184,272,1.413,273,1.413,274,1.413,275,1.184,276,1.033,277,1.033]],["title/classes/CreatePostMetaOptionsDto.html",[21,0.066,187,2.11]],["body/classes/CreatePostMetaOptionsDto.html",[3,0.33,4,0.286,5,0.286,7,0.821,10,2.009,11,0.029,12,1.357,15,1.586,16,0.423,20,0.33,21,0.099,26,0.022,27,0.022,88,1.467,107,1.427,119,2.636,170,3.94,172,2.373,187,3.159,251,3.717,253,3.547,258,1.995,261,3.94,276,3.94,277,3.94,278,3.127,279,3.732,280,3.732,281,3.732]],["title/classes/CreateUserDto.html",[21,0.066,282,1.732]],["body/classes/CreateUserDto.html",[3,0.243,4,0.211,5,0.211,7,0.607,10,2.081,11,0.029,12,1.406,15,1.905,16,0.312,20,0.243,21,0.081,26,0.018,27,0.018,88,1.52,89,1.508,93,3.859,96,3.367,107,1.054,158,2.108,172,1.929,225,3.305,251,3.274,252,2.883,253,3.675,255,2.31,256,2.31,258,1.473,275,3.305,282,2.108,283,4.457,284,2.015,285,3.859,286,4.606,287,2.757,288,2.757,289,2.757,290,2.757,291,2.757,292,2.757,293,2.757,294,5.027,295,3.944,296,3.944,297,3.944,298,3.944,299,3.944,300,5.534,301,3.944,302,3.944,303,3.944,304,2.757,305,3.944,306,2.757,307,3.944,308,2.757,309,2.757]],["title/classes/GetUsersParamDto.html",[21,0.066,310,1.904]],["body/classes/GetUsersParamDto.html",[3,0.326,4,0.283,5,0.283,7,0.813,10,1.53,11,0.03,12,1.034,16,0.608,20,0.326,21,0.11,26,0.022,27,0.022,88,1.623,89,1.843,94,2.867,107,1.413,158,2.867,172,2.358,252,3.524,258,1.975,260,2.702,263,2.702,264,4.039,265,1.975,310,2.832,311,4.039,312,2.832,313,3.097,314,3.696,315,3.696,316,4.039]],["title/classes/PatchPostDto.html",[21,0.066,317,2.11]],["body/classes/PatchPostDto.html",[3,0.3,4,0.26,5,0.26,7,0.748,10,1.407,11,0.03,12,0.951,16,0.623,20,0.3,21,0.093,26,0.021,27,0.021,87,1.527,88,1.028,94,3.157,105,2.484,107,1.299,112,1.816,158,1.816,169,1.997,171,2.484,172,2.23,190,3.334,197,2.437,209,3.334,251,2.97,258,1.816,263,3.334,265,1.816,282,1.816,316,3.821,317,2.97,318,3.821,319,3.334,320,4.56,321,3.398,322,4.56,323,3.398,324,3.398,325,2.484,326,3.398,327,2.484,328,2.847,329,3.398]],["title/classes/PatchUserDto.html",[21,0.066,330,2.11]],["body/classes/PatchUserDto.html",[3,0.382,4,0.331,5,0.331,11,0.029,16,0.603,20,0.382,21,0.089,26,0.024,27,0.024,107,1.654,112,2.313,282,2.313,284,3.164,319,3.895,325,3.164,327,3.164,330,3.47,331,3.626,332,5.328,333,3.164,334,3.164]],["title/controllers/PostsController.html",[0,0.98,335,2.11]],["body/controllers/PostsController.html",[0,0.648,2,0.648,3,0.189,4,0.164,5,0.164,7,0.471,8,1.355,10,1.644,11,0.03,12,1.111,14,1.644,15,1.298,16,0.542,17,0.434,20,0.189,21,0.044,23,0.963,24,0.887,26,0.015,27,0.015,63,1.259,68,1.145,69,1.145,70,1.259,71,1.145,80,3.261,86,1.942,87,1.784,88,1.201,89,1.518,119,2.649,132,1.566,133,2.392,134,1.566,164,2.131,165,2.392,169,2.966,180,1.566,197,2.123,265,1.145,317,3.288,328,2.742,335,2.131,336,1.795,337,3.273,338,3.273,339,3.273,340,3.273,341,2.142,342,3.971,343,3.273,344,2.142,345,4.789,346,3.273,347,3.273,348,3.273,349,2.142,350,2.142,351,3.273,352,2.142,353,3.273,354,2.142,355,2.742,356,2.142,357,3.273,358,3.273,359,2.142,360,2.142,361,3.273,362,2.142,363,2.142,364,2.123,365,1.795,366,2.742,367,3.327,368,1.795,369,1.795,370,1.795,371,2.142,372,2.142,373,2.142,374,2.142,375,2.142,376,1.795,377,2.142,378,1.795,379,2.142,380,2.142,381,2.142,382,2.142,383,2.142,384,2.142]],["title/modules/PostsModule.html",[28,0.98,42,1.904]],["body/modules/PostsModule.html",[2,1.392,3,0.304,4,0.264,5,0.264,11,0.03,16,0.626,17,0.697,20,0.304,21,0.071,26,0.021,27,0.021,28,1.567,30,1.426,31,1.548,32,1.841,33,1.841,34,1.548,35,2.77,36,1.841,42,3.614,43,2.9,44,2.459,45,1.841,46,1.685,48,2.997,78,2.886,335,3.375,364,3.169,365,2.886,385,2.886,386,3.444,387,2.886,388,3.444,389,3.444]],["title/injectables/PostsService.html",[54,1.145,364,1.732]],["body/injectables/PostsService.html",[3,0.268,4,0.232,5,0.232,7,0.667,8,1.746,11,0.03,12,1.18,14,1.255,15,1.586,16,0.478,17,0.614,20,0.268,21,0.062,23,1.362,24,1.255,26,0.019,27,0.019,54,1.49,55,1.62,68,2.255,69,1.62,70,1.781,71,1.62,80,2.85,83,2.54,84,2.564,86,2.063,87,1.895,88,1.276,89,1.612,98,2.54,101,2.216,102,4.03,113,2.747,173,4.394,182,3.534,312,1.781,355,2.54,364,2.255,390,2.54,391,3.032,392,4.218,393,3.032,394,3.032,395,4.394,396,4.218,397,4.218]],["title/controllers/ProductsController.html",[0,0.98,398,2.11]],["body/controllers/ProductsController.html",[0,1.38,2,1.38,3,0.403,4,0.349,5,0.349,11,0.029,16,0.517,17,0.923,20,0.403,21,0.093,26,0.025,27,0.025,63,2.68,398,3.583,399,3.822,400,4.562,401,4.562]],["title/modules/ProductsModule.html",[28,0.98,402,2.369]],["body/modules/ProductsModule.html",[2,1.617,3,0.384,4,0.333,5,0.333,11,0.029,16,0.605,17,0.881,20,0.384,21,0.089,26,0.024,27,0.024,28,1.617,30,1.802,398,3.769,402,3.909,403,4.353,404,4.353]],["title/classes/UpdateCatDto.html",[21,0.066,129,1.904]],["body/classes/UpdateCatDto.html",[3,0.382,4,0.331,5,0.331,11,0.029,16,0.603,20,0.382,21,0.089,26,0.024,27,0.024,107,1.654,112,2.313,118,2.313,129,3.13,139,3.164,168,3.164,319,3.895,325,3.164,333,3.164,334,3.164,405,3.626,406,5.328]],["title/controllers/UsersController.html",[0,0.98,407,2.11]],["body/controllers/UsersController.html",[0,0.54,2,0.54,3,0.158,4,0.137,5,0.137,7,0.393,8,1.175,10,1.463,11,0.029,12,0.989,14,1.463,15,1.437,16,0.53,17,0.361,20,0.158,21,0.037,23,0.802,24,2.032,26,0.013,27,0.013,63,1.049,68,0.954,69,0.954,70,1.049,71,0.954,80,3.084,84,1.588,86,1.728,87,1.975,88,1.485,89,1.351,119,1.97,132,1.305,133,2.583,134,2.075,158,2.723,164,1.848,180,1.305,190,2.944,191,2.378,197,2.502,200,3.317,265,0.954,282,2.623,310,2.366,312,2.993,327,2.075,330,3.317,366,2.378,367,2.378,368,1.495,369,1.495,370,1.495,376,1.495,378,2.378,407,1.848,408,1.495,409,2.838,410,3.534,411,2.838,412,1.785,413,1.785,414,1.785,415,5.094,416,1.785,417,2.838,418,2.838,419,2.838,420,1.785,421,2.838,422,2.838,423,4.027,424,2.838,425,1.785,426,2.838,427,2.838,428,1.785,429,2.838,430,2.838,431,2.378,432,3.534,433,1.785,434,2.378,435,1.785,436,1.785,437,3.534,438,1.785,439,1.495,440,1.495,441,1.495,442,3.534,443,1.785,444,1.785,445,1.785,446,1.495,447,1.785,448,1.785,449,1.785,450,1.785,451,1.785,452,1.785,453,1.785,454,1.785,455,1.785,456,1.785,457,1.785,458,1.785]],["title/modules/UsersModule.html",[28,0.98,43,1.585]],["body/modules/UsersModule.html",[2,1.371,3,0.297,4,0.258,5,0.258,11,0.03,16,0.621,17,0.682,20,0.297,21,0.069,26,0.021,27,0.021,28,1.55,30,1.394,31,1.513,32,1.8,33,1.8,34,1.513,35,2.739,36,2.739,40,2.423,43,2.944,44,2.423,45,1.8,46,1.647,48,2.193,76,2.952,84,2.861,407,3.337,441,2.822,459,2.822,460,2.822,461,2.822,462,3.368,463,3.368,464,3.368]],["title/injectables/UsersService.html",[54,1.145,84,1.456]],["body/injectables/UsersService.html",[3,0.212,4,0.184,5,0.184,7,0.528,8,1.476,11,0.03,12,1.19,14,1.476,15,1.644,16,0.482,17,0.486,20,0.212,21,0.049,23,1.078,24,1.476,26,0.016,27,0.016,54,1.26,55,1.283,64,2.01,65,2.669,68,1.905,69,1.283,70,1.41,71,1.283,76,1.563,80,3.097,81,2.01,84,1.602,86,2.08,87,1.911,88,1.286,89,1.626,94,2.516,96,3.441,97,2.01,100,2.01,101,1.754,102,1.754,113,2.77,158,2.917,200,2.77,285,3.944,310,2.766,312,2.094,434,2.987,439,2.01,440,2.01,465,2.01,466,3.565,467,2.4,468,2.4,469,2.4,470,4.253,471,2.4,472,3.565,473,2.4,474,2.4,475,2.4,476,3.565,477,2.4,478,2.4,479,2.4,480,2.4,481,3.565,482,3.565,483,2.4]],["title/coverage.html",[484,3.228]],["body/coverage.html",[0,1.636,1,1.679,5,0.197,6,2.161,11,0.029,18,1.378,21,0.12,26,0.017,27,0.017,34,1.159,54,1.831,56,2.161,61,1.679,62,2.161,65,1.261,79,2.161,84,1.159,88,0.78,106,1.679,108,2.161,109,1.679,110,2.161,118,1.378,119,1.261,129,1.515,136,1.378,155,2.161,164,1.679,167,2.161,168,2.748,169,1.515,170,2.748,171,2.748,187,1.679,261,1.885,278,2.161,282,1.378,283,2.161,284,2.748,310,1.515,311,2.161,312,1.515,313,2.161,317,1.679,318,2.161,330,1.679,331,2.161,335,1.679,336,2.161,364,1.378,390,2.161,398,1.679,399,2.161,405,2.161,407,1.679,408,2.161,465,2.161,484,1.885,485,2.161,486,2.579,487,2.579,488,6.414,489,4.874,490,5.584,491,4.874,492,3.759,493,2.161,494,2.579,495,3.759,496,2.579,497,2.579,498,2.579,499,2.579]],["title/dependencies.html",[31,1.75,500,2.27]],["body/dependencies.html",[11,0.03,17,0.833,21,0.106,26,0.024,27,0.024,31,1.85,258,2.2,260,3.009,265,2.2,333,3.009,334,3.009,501,4.117,502,4.117,503,5.644,504,4.117,505,4.117,506,4.117,507,4.117,508,4.117,509,4.117,510,4.117,511,4.117,512,4.117,513,4.117,514,4.117,515,4.117]],["title/miscellaneous/enumerations.html",[516,1.765,517,3.264]],["body/miscellaneous/enumerations.html",[7,0.855,11,0.029,26,0.023,27,0.023,119,2.435,176,4.171,200,3.242,201,4.171,233,4.171,234,4.171,235,4.171,236,4.171,268,4.171,271,4.171,277,4.614,516,2.53,517,3.255,518,4.979,519,4.979,520,4.979,521,4.979]],["title/miscellaneous/functions.html",[516,1.765,522,3.264]],["body/miscellaneous/functions.html",[7,1.068,11,0.026,26,0.026,27,0.026,34,2.725,493,4.066,516,3.161,522,4.066,523,4.854]],["title/index.html",[7,0.596,524,2.71,525,2.71]],["body/index.html",[4,0.15,11,0.028,26,0.014,27,0.014,46,2.38,165,1.429,197,1.045,198,1.638,209,3.096,276,1.429,395,2.555,431,1.638,446,4.077,484,1.429,485,2.555,526,1.955,527,1.955,528,3.749,529,3.049,530,1.955,531,1.955,532,1.955,533,1.955,534,3.049,535,3.749,536,1.955,537,1.955,538,1.955,539,4.235,540,1.955,541,5.257,542,1.955,543,5.082,544,1.955,545,1.955,546,1.955,547,3.049,548,1.955,549,3.049,550,1.955,551,3.749,552,1.955,553,1.955,554,1.955,555,1.955,556,1.955,557,1.955,558,4.235,559,5.257,560,3.049,561,1.955,562,1.955,563,1.955,564,1.955,565,4.866,566,3.049,567,4.235,568,1.955,569,3.049,570,1.955,571,3.049,572,4.866,573,4.235,574,1.955,575,3.049,576,1.955,577,1.955,578,1.955,579,1.955,580,4.235,581,1.955,582,1.955,583,1.955,584,1.955,585,3.049,586,1.955,587,1.955,588,1.955,589,1.955,590,1.955,591,3.049,592,1.955,593,1.955,594,1.955,595,3.049,596,1.955,597,1.955,598,3.548,599,3.049,600,1.955,601,1.955,602,1.955,603,1.955,604,1.955,605,1.955,606,1.955,607,1.955,608,3.049,609,1.955,610,1.638,611,1.955,612,1.955,613,3.749,614,1.955,615,1.955,616,1.955,617,1.955,618,1.955,619,1.955,620,3.049,621,1.955,622,1.955,623,1.955,624,1.955,625,3.049,626,1.955,627,1.955,628,1.955,629,3.049,630,3.049,631,1.955,632,1.955,633,1.955,634,1.955,635,1.955,636,1.955,637,1.955,638,1.955,639,1.955,640,1.955,641,1.955,642,1.638,643,1.955,644,1.955,645,1.955,646,1.955,647,1.955,648,1.955,649,1.638]],["title/modules.html",[30,1.828]],["body/modules.html",[11,0.024,26,0.024,27,0.024,29,2.771,30,1.762,40,2.274,41,2.5,42,2.5,43,2.081,402,3.111,598,5.158,610,3.565,650,6.156,651,6.156,652,6.273,653,4.255]],["title/overview.html",[654,3.7]],["body/overview.html",[2,0.906,11,0.029,18,2.576,26,0.019,27,0.019,28,0.906,29,4.068,30,1.24,31,1.346,32,1.601,33,1.601,34,1.346,35,1.601,36,1.601,37,2.51,38,2.51,39,2.51,40,3.039,41,3.225,42,3.428,43,2.854,44,2.236,45,1.601,46,1.465,55,1.601,65,2.854,72,2.51,73,2.51,74,2.51,84,2.622,107,1.145,136,2.576,151,2.51,152,2.51,224,2.51,364,2.576,385,2.51,387,2.51,459,2.51,460,2.51,461,2.51,654,2.51,655,4.183,656,2.996]],["title/properties.html",[172,1.905,500,2.27]],["body/properties.html",[11,0.029,26,0.026,27,0.026,172,2.329,197,2.545,642,3.99,649,3.99,657,4.762,658,4.762,659,4.762]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"classes/UpdateCatDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":488,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":658,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":510,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":513,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":509,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":490,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":496,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":489,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":495,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":491,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":497,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":492,"title":{},"body":{"coverage.html":{}}}],["03",{"_index":211,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["1",{"_index":322,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["1.1.23",{"_index":502,"title":{},"body":{"dependencies.html":{}}}],["10.0.0",{"_index":503,"title":{},"body":{"dependencies.html":{}}}],["1234",{"_index":483,"title":{},"body":{"injectables/UsersService.html":{}}}],["16t07:46:32+0000",{"_index":274,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["16t07:46:32+0000'})@isiso8601()@isoptional",{"_index":212,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["2",{"_index":397,"title":{},"body":{"injectables/PostsService.html":{}}}],["2.0.6",{"_index":505,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":429,"title":{},"body":{"controllers/UsersController.html":{}}}],["201",{"_index":345,"title":{},"body":{"controllers/PostsController.html":{}}}],["2024",{"_index":210,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["5",{"_index":656,"title":{},"body":{"overview.html":{}}}],["6",{"_index":655,"title":{},"body":{"overview.html":{}}}],["7.8.1",{"_index":515,"title":{},"body":{"dependencies.html":{}}}],["8.0.7",{"_index":508,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":224,"title":{},"body":{"classes/CreatePostDto.html":{},"overview.html":{}}}],["action",{"_index":162,"title":{},"body":{"injectables/CatsService.html":{}}}],["adds",{"_index":163,"title":{},"body":{"injectables/CatsService.html":{}}}],["alice",{"_index":481,"title":{},"body":{"injectables/UsersService.html":{}}}],["alice@doe.com",{"_index":482,"title":{},"body":{"injectables/UsersService.html":{}}}],["allowing",{"_index":586,"title":{},"body":{"index.html":{}}}],["amazing",{"_index":635,"title":{},"body":{"index.html":{}}}],["api",{"_index":427,"title":{},"body":{"controllers/UsersController.html":{}}}],["apioperation",{"_index":366,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["apioperation({summary",{"_index":342,"title":{},"body":{"controllers/PostsController.html":{}}}],["apiproperty",{"_index":263,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{}}}],["apiproperty()@isstring()@minlength(4)@isnotempty",{"_index":243,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apiproperty({description",{"_index":205,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apiproperty({enum",{"_index":196,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apiproperty({name",{"_index":321,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["apipropertyoptional",{"_index":264,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{}}}],["apipropertyoptional()@isarray()@isoptional()@isstring({each",{"_index":239,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apipropertyoptional()@isoptional()@isint()@type(undefined",{"_index":314,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["apipropertyoptional()@isoptional()@isstring",{"_index":183,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apipropertyoptional()@isoptional()@isurl",{"_index":185,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apipropertyoptional({description",{"_index":214,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apipropertyoptional({type",{"_index":188,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apiquery",{"_index":442,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiresponse",{"_index":367,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["apitags",{"_index":368,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["apitags('posts",{"_index":372,"title":{},"body":{"controllers/PostsController.html":{}}}],["apitags('users",{"_index":444,"title":{},"body":{"controllers/UsersController.html":{}}}],["app.controller",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":446,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{}}}],["application.'})@apiquery({name",{"_index":420,"title":{},"body":{"controllers/UsersController.html":{}}}],["applications",{"_index":534,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["array",{"_index":189,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["auth",{"_index":64,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UsersService.html":{}}}],["auth.controller",{"_index":77,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":61,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":40,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":642,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":65,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":653,"title":{},"body":{"modules.html":{}}}],["aws",{"_index":575,"title":{},"body":{"index.html":{}}}],["backers",{"_index":636,"title":{},"body":{"index.html":{}}}],["based",{"_index":431,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{}}}],["blog",{"_index":377,"title":{},"body":{"controllers/PostsController.html":{}}}],["blog.'})@apiresponse({status",{"_index":344,"title":{},"body":{"controllers/PostsController.html":{}}}],["board",{"_index":628,"title":{},"body":{"index.html":{}}}],["body",{"_index":132,"title":{},"body":{"controllers/CatsController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":91,"title":{},"body":{"injectables/AuthService.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":652,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":650,"title":{},"body":{"modules.html":{}}}],["building",{"_index":529,"title":{},"body":{"index.html":{}}}],["cat",{"_index":106,"title":{"classes/Cat.html":{}},"body":{"classes/Cat.html":{},"injectables/CatsService.html":{},"coverage.html":{}}}],["cat.dto",{"_index":139,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/UpdateCatDto.html":{}}}],["cat.dto.ts",{"_index":168,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/UpdateCatDto.html":{},"coverage.html":{}}}],["cats",{"_index":111,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["cats.controller",{"_index":154,"title":{},"body":{"modules/CatsModule.html":{}}}],["cats.service",{"_index":137,"title":{},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{}}}],["cats/cats.module",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["catscontroller",{"_index":109,"title":{"controllers/CatsController.html":{}},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{},"coverage.html":{}}}],["catsmodule",{"_index":41,"title":{"modules/CatsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules.html":{},"overview.html":{}}}],["catsservice",{"_index":136,"title":{"injectables/CatsService.html":{}},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"coverage.html":{},"overview.html":{}}}],["channel",{"_index":601,"title":{},"body":{"index.html":{}}}],["character",{"_index":303,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["characters",{"_index":299,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["check",{"_index":565,"title":{},"body":{"index.html":{}}}],["class",{"_index":21,"title":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"classes/UpdateCatDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"classes/UpdateCatDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":107,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"classes/UpdateCatDto.html":{},"overview.html":{}}}],["clicks",{"_index":585,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":570,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":72,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":73,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":74,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_catsmodule",{"_index":151,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_catsmodule_providers",{"_index":152,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_postsmodule",{"_index":385,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_postsmodule_imports",{"_index":386,"title":{},"body":{"modules/PostsModule.html":{}}}],["cluster_postsmodule_providers",{"_index":387,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":459,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":460,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":461,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["come",{"_index":592,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":501,"title":{},"body":{"dependencies.html":{}}}],["console.log(createpostdto",{"_index":380,"title":{},"body":{"controllers/PostsController.html":{}}}],["console.log(createuserdto",{"_index":453,"title":{},"body":{"controllers/UsersController.html":{}}}],["console.log(isauth",{"_index":478,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.log(patchpostdto",{"_index":384,"title":{},"body":{"controllers/PostsController.html":{}}}],["const",{"_index":101,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":68,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":467,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{}}}],["constructor(usersservice",{"_index":83,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["content",{"_index":173,"title":{},"body":{"classes/CreatePostDto.html":{},"injectables/PostsService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CatsController.html":{},"controllers/PostsController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CatsController.html":{},"controllers/PostsController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":67,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('cats",{"_index":141,"title":{},"body":{"controllers/CatsController.html":{}}}],["controller('posts",{"_index":371,"title":{},"body":{"controllers/PostsController.html":{}}}],["controller('products",{"_index":401,"title":{},"body":{"controllers/ProductsController.html":{}}}],["controller('users",{"_index":443,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["courses",{"_index":607,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":484,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":112,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"classes/UpdateCatDto.html":{}}}],["create(@body",{"_index":142,"title":{},"body":{"controllers/CatsController.html":{}}}],["create(createcatdto",{"_index":117,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["createcatdto",{"_index":118,"title":{"classes/CreateCatDto.html":{}},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/UpdateCatDto.html":{},"coverage.html":{}}}],["created",{"_index":348,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpost",{"_index":338,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpost(@body",{"_index":379,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpost(createpostdto",{"_index":341,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpostdto",{"_index":169,"title":{"classes/CreatePostDto.html":{}},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"coverage.html":{}}}],["createpostmetaoptionsdto",{"_index":187,"title":{"classes/CreatePostMetaOptionsDto.html":{}},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["creates",{"_index":343,"title":{},"body":{"controllers/PostsController.html":{}}}],["createuserdto",{"_index":282,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["createusers",{"_index":409,"title":{},"body":{"controllers/UsersController.html":{}}}],["createusers(@body",{"_index":452,"title":{},"body":{"controllers/UsersController.html":{}}}],["createusers(createuserdto",{"_index":412,"title":{},"body":{"controllers/UsersController.html":{}}}],["date",{"_index":204,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["ddd",{"_index":60,"title":{},"body":{"injectables/AppService.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["deeper",{"_index":603,"title":{},"body":{"index.html":{}}}],["defaultvaluepipe",{"_index":438,"title":{},"body":{"controllers/UsersController.html":{}}}],["defaultvaluepipe(1",{"_index":450,"title":{},"body":{"controllers/UsersController.html":{}}}],["defaultvaluepipe(10",{"_index":448,"title":{},"body":{"controllers/UsersController.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":135,"title":{},"body":{"controllers/CatsController.html":{}}}],["delete(':id",{"_index":126,"title":{},"body":{"controllers/CatsController.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":558,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":574,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":566,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":584,"title":{},"body":{"index.html":{}}}],["description",{"_index":197,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"index.html":{},"properties.html":{}}}],["description:'thas",{"_index":382,"title":{},"body":{"controllers/PostsController.html":{}}}],["development",{"_index":544,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":615,"title":{},"body":{"index.html":{}}}],["discord",{"_index":600,"title":{},"body":{"index.html":{}}}],["dive",{"_index":602,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":485,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["draft",{"_index":234,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["dto/create",{"_index":138,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["dto/update",{"_index":140,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["dtos/create",{"_index":369,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["dtos/get",{"_index":439,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dtos/patch",{"_index":370,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["e2e",{"_index":553,"title":{},"body":{"index.html":{}}}],["each",{"_index":241,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["efficient",{"_index":530,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":564,"title":{},"body":{"index.html":{}}}],["eight",{"_index":298,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["email",{"_index":96,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/UsersService.html":{}}}],["endpoint",{"_index":457,"title":{},"body":{"controllers/UsersController.html":{}}}],["ensure",{"_index":562,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":619,"title":{},"body":{"index.html":{}}}],["enum",{"_index":267,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["enumerations",{"_index":517,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/post",{"_index":245,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["error",{"_index":219,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["example",{"_index":209,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{},"index.html":{}}}],["experience",{"_index":605,"title":{},"body":{"index.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"classes/UpdateCatDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":507,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":319,"title":{},"body":{"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"classes/UpdateCatDto.html":{}}}],["false",{"_index":191,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/UsersController.html":{}}}],["false})@apiquery({name",{"_index":425,"title":{},"body":{"controllers/UsersController.html":{}}}],["false})@apiresponse({status",{"_index":428,"title":{},"body":{"controllers/UsersController.html":{}}}],["fast",{"_index":578,"title":{},"body":{"index.html":{}}}],["featuredimageurl",{"_index":174,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["features",{"_index":588,"title":{},"body":{"index.html":{}}}],["fetched",{"_index":430,"title":{},"body":{"controllers/UsersController.html":{}}}],["fetches",{"_index":417,"title":{},"body":{"controllers/UsersController.html":{}}}],["few",{"_index":580,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"classes/UpdateCatDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["find",{"_index":476,"title":{},"body":{"injectables/UsersService.html":{}}}],["findall",{"_index":113,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["findall(getuserparamdto",{"_index":469,"title":{},"body":{"injectables/UsersService.html":{}}}],["findall(userid",{"_index":392,"title":{},"body":{"injectables/PostsService.html":{}}}],["findone",{"_index":114,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["findone(@param('id",{"_index":145,"title":{},"body":{"controllers/CatsController.html":{}}}],["findone(id",{"_index":122,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["findonebyid",{"_index":466,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyid(id",{"_index":472,"title":{},"body":{"injectables/UsersService.html":{}}}],["firstname",{"_index":285,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/UsersService.html":{}}}],["focus",{"_index":587,"title":{},"body":{"index.html":{}}}],["follow",{"_index":622,"title":{},"body":{"index.html":{}}}],["forwardref",{"_index":76,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["framework",{"_index":528,"title":{},"body":{"index.html":{}}}],["full",{"_index":618,"title":{},"body":{"index.html":{}}}],["function",{"_index":494,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":522,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":583,"title":{},"body":{"index.html":{}}}],["get('/:id",{"_index":445,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/:id?')@apioperation({summary",{"_index":416,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/:userid",{"_index":353,"title":{},"body":{"controllers/PostsController.html":{}}}],["get(':id",{"_index":123,"title":{},"body":{"controllers/CatsController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getposts",{"_index":339,"title":{},"body":{"controllers/PostsController.html":{}}}],["getposts(@param('userid",{"_index":374,"title":{},"body":{"controllers/PostsController.html":{}}}],["getposts(userid",{"_index":352,"title":{},"body":{"controllers/PostsController.html":{}}}],["getting",{"_index":524,"title":{"index.html":{}},"body":{}}],["getuserparamdto",{"_index":434,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["getusers",{"_index":410,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusers(getuserparamdto",{"_index":414,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersparamdto",{"_index":310,"title":{"classes/GetUsersParamDto.html":{}},"body":{"classes/GetUsersParamDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["graph",{"_index":610,"title":{},"body":{"index.html":{},"modules.html":{}}}],["grow",{"_index":632,"title":{},"body":{"index.html":{}}}],["hands",{"_index":604,"title":{},"body":{"index.html":{}}}],["handy",{"_index":593,"title":{},"body":{"index.html":{}}}],["hello",{"_index":58,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":608,"title":{},"body":{"index.html":{}}}],["here",{"_index":640,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":646,"title":{},"body":{"index.html":{}}}],["id",{"_index":94,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"injectables/UsersService.html":{}}}],["id:number",{"_index":329,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["identifier",{"_index":486,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"classes/UpdateCatDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"classes/UpdateCatDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["information",{"_index":568,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":590,"title":{},"body":{"index.html":{}}}],["inject",{"_index":97,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["inject(forwardref",{"_index":100,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":54,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CatsService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CatsService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":55,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CatsService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injecting",{"_index":69,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["install",{"_index":582,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":542,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":454,"title":{},"body":{"controllers/UsersController.html":{}}}],["interact",{"_index":611,"title":{},"body":{"index.html":{}}}],["isarray",{"_index":247,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isauth",{"_index":81,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["isemail",{"_index":305,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isemail()@isnotempty",{"_index":287,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isenum",{"_index":248,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isenum(poststatus",{"_index":272,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isenum(posttype",{"_index":269,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isint",{"_index":316,"title":{},"body":{"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{}}}],["isiso8601",{"_index":249,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isjson",{"_index":250,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isnotempty",{"_index":251,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/PatchPostDto.html":{}}}],["iso8601",{"_index":208,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isoptional",{"_index":252,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{}}}],["isstring",{"_index":253,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty",{"_index":279,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{}}}],["isstring()@isnotempty()@minlength(3)@maxlength(96",{"_index":289,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty()@minlength(8)@matches(/^(?=.*[a",{"_index":293,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring()@isoptional()@minlength(3)@maxlength(96",{"_index":291,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isurl",{"_index":254,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["items",{"_index":192,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["job",{"_index":625,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":627,"title":{},"body":{"index.html":{}}}],["john",{"_index":479,"title":{},"body":{"injectables/UsersService.html":{}}}],["john@doe.com",{"_index":480,"title":{},"body":{"injectables/UsersService.html":{}}}],["join",{"_index":638,"title":{},"body":{"index.html":{}}}],["json",{"_index":216,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["kamil",{"_index":643,"title":{},"body":{"index.html":{}}}],["key",{"_index":276,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"index.html":{}}}],["lastname",{"_index":286,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["learn",{"_index":596,"title":{},"body":{"index.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["letter",{"_index":301,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["letters",{"_index":227,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["license",{"_index":649,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":630,"title":{},"body":{"index.html":{}}}],["limit",{"_index":415,"title":{},"body":{"controllers/UsersController.html":{}}}],["limt",{"_index":470,"title":{},"body":{"injectables/UsersService.html":{}}}],["linkedin",{"_index":624,"title":{},"body":{"index.html":{}}}],["list",{"_index":418,"title":{},"body":{"controllers/UsersController.html":{}}}],["localhost:3000/posts/:userid",{"_index":373,"title":{},"body":{"controllers/PostsController.html":{}}}],["login",{"_index":82,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(email",{"_index":92,"title":{},"body":{"injectables/AuthService.html":{}}}],["looking",{"_index":569,"title":{},"body":{"index.html":{}}}],["loop",{"_index":621,"title":{},"body":{"index.html":{}}}],["makes",{"_index":576,"title":{},"body":{"index.html":{}}}],["managing",{"_index":589,"title":{},"body":{"index.html":{}}}],["matches",{"_index":255,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["matches(/^(?=.*[a",{"_index":309,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(/^[a",{"_index":270,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"classes/UpdateCatDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["mau",{"_index":572,"title":{},"body":{"index.html":{}}}],["maxlength",{"_index":306,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["maxlength(96",{"_index":307,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["mean",{"_index":361,"title":{},"body":{"controllers/PostsController.html":{}}}],["message",{"_index":225,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["meta",{"_index":261,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["metadata",{"_index":512,"title":{},"body":{"dependencies.html":{}}}],["metaoptions",{"_index":175,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["method",{"_index":475,"title":{},"body":{"injectables/UsersService.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["minimum",{"_index":297,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength",{"_index":256,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["minlength(3",{"_index":275,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["minlength(4",{"_index":266,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["minlength(8",{"_index":308,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":516,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mit",{"_index":629,"title":{},"body":{"index.html":{}}}],["mode",{"_index":547,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/PostsModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/PostsModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/PostsModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":567,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":644,"title":{},"body":{"index.html":{}}}],["name",{"_index":87,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["need",{"_index":616,"title":{},"body":{"index.html":{}}}],["nest",{"_index":535,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":648,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":559,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":504,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":333,"title":{},"body":{"classes/PatchUserDto.html":{},"classes/UpdateCatDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":506,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":265,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["new",{"_index":164,"title":{},"body":{"injectables/CatsService.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["node.js",{"_index":527,"title":{},"body":{"index.html":{}}}],["npm",{"_index":541,"title":{},"body":{"index.html":{}}}],["number",{"_index":158,"title":{},"body":{"injectables/CatsService.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["object",{"_index":217,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["offer",{"_index":626,"title":{},"body":{"index.html":{}}}],["official",{"_index":573,"title":{},"body":{"index.html":{}}}],["one",{"_index":300,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["open",{"_index":631,"title":{},"body":{"index.html":{}}}],["operation",{"_index":357,"title":{},"body":{"controllers/PostsController.html":{}}}],["optional",{"_index":89,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["options.dto",{"_index":262,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["options.dto.ts",{"_index":278,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["options.dto.ts:6",{"_index":280,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{}}}],["options.dto.ts:9",{"_index":281,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{}}}],["out",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":654,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":500,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":200,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["pages",{"_index":422,"title":{},"body":{"controllers/UsersController.html":{}}}],["pagination",{"_index":424,"title":{},"body":{"controllers/UsersController.html":{}}}],["param",{"_index":134,"title":{},"body":{"controllers/CatsController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["param.dto",{"_index":440,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["param.dto.ts",{"_index":313,"title":{},"body":{"classes/GetUsersParamDto.html":{},"coverage.html":{}}}],["param.dto.ts:11",{"_index":315,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["parameters",{"_index":86,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["parseintpipe",{"_index":437,"title":{},"body":{"controllers/UsersController.html":{}}}],["part",{"_index":617,"title":{},"body":{"index.html":{}}}],["partialtype",{"_index":325,"title":{},"body":{"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"classes/UpdateCatDto.html":{}}}],["partialtype(createcatdto",{"_index":406,"title":{},"body":{"classes/UpdateCatDto.html":{}}}],["partialtype(createpostdto",{"_index":320,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["partialtype(createuserdto",{"_index":332,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["password",{"_index":93,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{}}}],["patch",{"_index":133,"title":{},"body":{"controllers/CatsController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["patch(':id",{"_index":130,"title":{},"body":{"controllers/CatsController.html":{}}}],["patchpostdto",{"_index":317,"title":{"classes/PatchPostDto.html":{}},"body":{"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"coverage.html":{}}}],["patchuser",{"_index":411,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchuser(@body",{"_index":458,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchuser(patchuserdto",{"_index":435,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchuserdto",{"_index":330,"title":{"classes/PatchUserDto.html":{}},"body":{"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["platform",{"_index":571,"title":{},"body":{"index.html":{}}}],["please",{"_index":599,"title":{},"body":{"index.html":{}}}],["position",{"_index":426,"title":{},"body":{"controllers/UsersController.html":{}}}],["possible",{"_index":198,"title":{},"body":{"classes/CreatePostDto.html":{},"index.html":{}}}],["post",{"_index":119,"title":{},"body":{"controllers/CatsController.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["post'})@apiresponse({status",{"_index":359,"title":{},"body":{"controllers/PostsController.html":{}}}],["post'})@patch",{"_index":362,"title":{},"body":{"controllers/PostsController.html":{}}}],["post.dto",{"_index":328,"title":{},"body":{"classes/PatchPostDto.html":{},"controllers/PostsController.html":{}}}],["post.dto.ts",{"_index":171,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{},"coverage.html":{}}}],["post.dto.ts:107",{"_index":195,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:15",{"_index":324,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["post.dto.ts:26",{"_index":244,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:34",{"_index":203,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:45",{"_index":232,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:53",{"_index":238,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:58",{"_index":184,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:66",{"_index":221,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:71",{"_index":186,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:79",{"_index":213,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:86",{"_index":242,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["posts",{"_index":337,"title":{},"body":{"controllers/PostsController.html":{}}}],["posts.controller",{"_index":389,"title":{},"body":{"modules/PostsModule.html":{}}}],["posts/posts.module",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["postscontroller",{"_index":335,"title":{"controllers/PostsController.html":{}},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{},"coverage.html":{}}}],["postsmodule",{"_index":42,"title":{"modules/PostsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules.html":{},"overview.html":{}}}],["postsservice",{"_index":364,"title":{"injectables/PostsService.html":{}},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"coverage.html":{},"overview.html":{}}}],["poststatus",{"_index":233,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["posttype",{"_index":176,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["prefix",{"_index":63,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CatsController.html":{},"controllers/PostsController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["private",{"_index":71,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["production",{"_index":549,"title":{},"body":{"index.html":{}}}],["products",{"_index":400,"title":{},"body":{"controllers/ProductsController.html":{}}}],["products.controller",{"_index":404,"title":{},"body":{"modules/ProductsModule.html":{}}}],["productscontroller",{"_index":398,"title":{"controllers/ProductsController.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["productsmodule",{"_index":402,"title":{"modules/ProductsModule.html":{}},"body":{"modules/ProductsModule.html":{},"modules.html":{}}}],["progressive",{"_index":526,"title":{},"body":{"index.html":{}}}],["project",{"_index":539,"title":{},"body":{"index.html":{}}}],["properties",{"_index":172,"title":{"properties.html":{}},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"properties.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["providers/auth.service",{"_index":66,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["providers/posts.service",{"_index":365,"title":{},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{}}}],["providers/users.service",{"_index":441,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["public",{"_index":80,"title":{},"body":{"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["published",{"_index":271,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["published''})@isenum(poststatus)@isnotempty",{"_index":237,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["publishon",{"_index":177,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["query",{"_index":432,"title":{},"body":{"controllers/UsersController.html":{}}}],["query('limit",{"_index":447,"title":{},"body":{"controllers/UsersController.html":{}}}],["query('page",{"_index":449,"title":{},"body":{"controllers/UsersController.html":{}}}],["questions",{"_index":597,"title":{},"body":{"index.html":{}}}],["read",{"_index":639,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["ready",{"_index":557,"title":{},"body":{"index.html":{}}}],["real",{"_index":612,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":511,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":419,"title":{},"body":{"controllers/UsersController.html":{}}}],["remove",{"_index":115,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["remove(@param('id",{"_index":149,"title":{},"body":{"controllers/CatsController.html":{}}}],["remove(id",{"_index":125,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["removes",{"_index":166,"title":{},"body":{"injectables/CatsService.html":{}}}],["repository",{"_index":538,"title":{},"body":{"index.html":{}}}],["request",{"_index":456,"title":{},"body":{"controllers/UsersController.html":{}}}],["required",{"_index":190,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{},"controllers/UsersController.html":{}}}],["requiring",{"_index":579,"title":{},"body":{"index.html":{}}}],["reset",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resources",{"_index":591,"title":{},"body":{"index.html":{}}}],["response",{"_index":347,"title":{},"body":{"controllers/PostsController.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"classes/UpdateCatDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["review",{"_index":236,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["run",{"_index":543,"title":{},"body":{"index.html":{}}}],["runs",{"_index":563,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":514,"title":{},"body":{"dependencies.html":{}}}],["sample_token",{"_index":104,"title":{},"body":{"injectables/AuthService.html":{}}}],["scalable",{"_index":531,"title":{},"body":{"index.html":{}}}],["scheduled",{"_index":235,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["schema",{"_index":178,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["sent",{"_index":455,"title":{},"body":{"controllers/UsersController.html":{}}}],["serialize",{"_index":215,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["series",{"_index":268,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["series''})@isenum(posttype)@isnotempty",{"_index":202,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["server",{"_index":532,"title":{},"body":{"index.html":{}}}],["service",{"_index":70,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["setup",{"_index":540,"title":{},"body":{"index.html":{}}}],["side",{"_index":533,"title":{},"body":{"index.html":{}}}],["simple",{"_index":581,"title":{},"body":{"index.html":{}}}],["slug",{"_index":179,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["small",{"_index":226,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"classes/UpdateCatDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["spaces",{"_index":230,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["special",{"_index":302,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["sponsors",{"_index":634,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":523,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../post",{"_index":518,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":56,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:6",{"_index":57,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":62,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.module",{"_index":463,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/auth/auth.module.ts",{"_index":75,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/providers/auth.service",{"_index":474,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/auth/providers/auth.service.ts",{"_index":79,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/providers/auth.service.ts:13",{"_index":95,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:19",{"_index":90,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:6",{"_index":85,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/cats/cats.controller.ts",{"_index":110,"title":{},"body":{"controllers/CatsController.html":{},"coverage.html":{}}}],["src/cats/cats.controller.ts:11",{"_index":120,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:16",{"_index":121,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:21",{"_index":124,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:26",{"_index":131,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:31",{"_index":127,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.module.ts",{"_index":153,"title":{},"body":{"modules/CatsModule.html":{}}}],["src/cats/cats.service.ts",{"_index":155,"title":{},"body":{"injectables/CatsService.html":{},"coverage.html":{}}}],["src/cats/cats.service.ts:11",{"_index":157,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:15",{"_index":159,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:19",{"_index":161,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:23",{"_index":160,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:7",{"_index":156,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/dto/create",{"_index":167,"title":{},"body":{"classes/CreateCatDto.html":{},"coverage.html":{}}}],["src/cats/dto/update",{"_index":405,"title":{},"body":{"classes/UpdateCatDto.html":{},"coverage.html":{}}}],["src/cats/entities/cat.entity.ts",{"_index":108,"title":{},"body":{"classes/Cat.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":493,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/posts/dtos/create",{"_index":170,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["src/posts/dtos/patch",{"_index":318,"title":{},"body":{"classes/PatchPostDto.html":{},"coverage.html":{}}}],["src/posts/enums/post",{"_index":521,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/posts/posts.controller.ts",{"_index":336,"title":{},"body":{"controllers/PostsController.html":{},"coverage.html":{}}}],["src/posts/posts.controller.ts:21",{"_index":354,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.controller.ts:34",{"_index":350,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.controller.ts:44",{"_index":363,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.module.ts",{"_index":388,"title":{},"body":{"modules/PostsModule.html":{}}}],["src/posts/providers/posts.service.ts",{"_index":390,"title":{},"body":{"injectables/PostsService.html":{},"coverage.html":{}}}],["src/posts/providers/posts.service.ts:13",{"_index":393,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/posts/providers/posts.service.ts:5",{"_index":391,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/products/products.controller.ts",{"_index":399,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{}}}],["src/products/products.module.ts",{"_index":403,"title":{},"body":{"modules/ProductsModule.html":{}}}],["src/users/dtos/create",{"_index":283,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dtos/get",{"_index":311,"title":{},"body":{"classes/GetUsersParamDto.html":{},"coverage.html":{}}}],["src/users/dtos/patch",{"_index":331,"title":{},"body":{"classes/PatchUserDto.html":{},"coverage.html":{}}}],["src/users/providers/users.service",{"_index":98,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["src/users/providers/users.service.ts",{"_index":465,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/providers/users.service.ts:16",{"_index":471,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:39",{"_index":473,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:6",{"_index":468,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.controller.ts",{"_index":408,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:47",{"_index":433,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:56",{"_index":413,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:62",{"_index":436,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":78,"title":{},"body":{"modules/AuthModule.html":{},"modules/PostsModule.html":{}}}],["src/users/users.module.ts",{"_index":462,"title":{},"body":{"modules/UsersModule.html":{}}}],["start",{"_index":545,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":548,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":550,"title":{},"body":{"index.html":{}}}],["started",{"_index":525,"title":{"index.html":{}},"body":{}}],["starter",{"_index":537,"title":{},"body":{"index.html":{}}}],["statements",{"_index":487,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":180,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["status.enum",{"_index":246,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["status.enum.ts",{"_index":519,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["status:201",{"_index":381,"title":{},"body":{"controllers/PostsController.html":{}}}],["stay",{"_index":620,"title":{},"body":{"index.html":{}}}],["steps",{"_index":560,"title":{},"body":{"index.html":{}}}],["story",{"_index":201,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["straightforward",{"_index":577,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["success",{"_index":346,"title":{},"body":{"controllers/PostsController.html":{}}}],["successfully",{"_index":378,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["successfully'})@post",{"_index":349,"title":{},"body":{"controllers/PostsController.html":{}}}],["summary",{"_index":376,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["support",{"_index":598,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":651,"title":{},"body":{"modules.html":{}}}],["table",{"_index":499,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":498,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":181,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["take",{"_index":561,"title":{},"body":{"index.html":{}}}],["test",{"_index":395,"title":{},"body":{"injectables/PostsService.html":{},"index.html":{}}}],["test:covdeployment",{"_index":555,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":554,"title":{},"body":{"index.html":{}}}],["tests",{"_index":551,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":633,"title":{},"body":{"index.html":{}}}],["thas",{"_index":360,"title":{},"body":{"controllers/PostsController.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.isauth",{"_index":477,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.catsservice.create(createcatdto",{"_index":143,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catsservice.findall",{"_index":144,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catsservice.findone(+id",{"_index":146,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catsservice.remove(+id",{"_index":150,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catsservice.update(+id",{"_index":148,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.postsservice.findall(userid",{"_index":375,"title":{},"body":{"controllers/PostsController.html":{}}}],["this.usersservice.findall(getuserparamdto",{"_index":451,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findonebyid('1234",{"_index":103,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findonebyid(userid",{"_index":394,"title":{},"body":{"injectables/PostsService.html":{}}}],["thrown",{"_index":273,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["thrown'})@isoptional()@isjson",{"_index":220,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["tile",{"_index":396,"title":{},"body":{"injectables/PostsService.html":{}}}],["time",{"_index":613,"title":{},"body":{"index.html":{}}}],["timestamp",{"_index":207,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["title",{"_index":182,"title":{},"body":{"classes/CreatePostDto.html":{},"injectables/PostsService.html":{}}}],["touch",{"_index":641,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":260,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"dependencies.html":{}}}],["true",{"_index":105,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{}}}],["true})@isnotempty()@isint",{"_index":323,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["true})@minlength(3",{"_index":240,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["true})@type(undefined",{"_index":194,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["twitter",{"_index":647,"title":{},"body":{"index.html":{}}}],["type",{"_index":88,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["type.enum",{"_index":259,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["type.enum.ts",{"_index":520,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["types",{"_index":334,"title":{},"body":{"classes/PatchUserDto.html":{},"classes/UpdateCatDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":536,"title":{},"body":{"index.html":{}}}],["undefined})@isoptional()@isarray()@validatenested({each",{"_index":193,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["unit",{"_index":552,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":659,"title":{},"body":{"properties.html":{}}}],["update",{"_index":116,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["update(@param('id",{"_index":147,"title":{},"body":{"controllers/CatsController.html":{}}}],["update(id",{"_index":128,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["updatecatdto",{"_index":129,"title":{"classes/UpdateCatDto.html":{}},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/UpdateCatDto.html":{},"coverage.html":{}}}],["updatepost",{"_index":340,"title":{},"body":{"controllers/PostsController.html":{}}}],["updatepost(@body",{"_index":383,"title":{},"body":{"controllers/PostsController.html":{}}}],["updatepost(patchpostdto",{"_index":356,"title":{},"body":{"controllers/PostsController.html":{}}}],["updates",{"_index":165,"title":{},"body":{"injectables/CatsService.html":{},"controllers/PostsController.html":{},"index.html":{}}}],["updating",{"_index":358,"title":{},"body":{"controllers/PostsController.html":{}}}],["upper",{"_index":421,"title":{},"body":{"controllers/UsersController.html":{}}}],["url",{"_index":231,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["url''})@isstring()@isnotempty()@matches(/^[a",{"_index":222,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["user",{"_index":102,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["user.dto",{"_index":327,"title":{},"body":{"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/UsersController.html":{}}}],["user.dto.ts",{"_index":284,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PatchUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:16",{"_index":290,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:22",{"_index":292,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:26",{"_index":288,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:35",{"_index":304,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["userid",{"_index":355,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["users",{"_index":312,"title":{},"body":{"classes/GetUsersParamDto.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["users.controller",{"_index":464,"title":{},"body":{"modules/UsersModule.html":{}}}],["users/dtos/create",{"_index":326,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["users/users.module",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":407,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":99,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersmodule",{"_index":43,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":84,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["uses",{"_index":228,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["using",{"_index":614,"title":{},"body":{"index.html":{}}}],["valid",{"_index":206,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["validatenested",{"_index":257,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["validation",{"_index":218,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["validator",{"_index":258,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"dependencies.html":{}}}],["value",{"_index":277,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"miscellaneous/enumerations.html":{}}}],["values",{"_index":199,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["version",{"_index":657,"title":{},"body":{"properties.html":{}}}],["video",{"_index":606,"title":{},"body":{"index.html":{}}}],["visit",{"_index":595,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":609,"title":{},"body":{"index.html":{}}}],["void",{"_index":351,"title":{},"body":{"controllers/PostsController.html":{}}}],["want",{"_index":423,"title":{},"body":{"controllers/UsersController.html":{}}}],["watch",{"_index":546,"title":{},"body":{"index.html":{}}}],["website",{"_index":645,"title":{},"body":{"index.html":{}}}],["without",{"_index":229,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["working",{"_index":594,"title":{},"body":{"index.html":{}}}],["world",{"_index":59,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":623,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":637,"title":{},"body":{"index.html":{}}}],["you're",{"_index":556,"title":{},"body":{"index.html":{}}}],["z0",{"_index":223,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["z\\d@$!%*#?&]{8",{"_index":296,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z])(?=.*\\d)(?=.*[@$!%*#?&])[a",{"_index":295,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["za",{"_index":294,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["zoom",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCatsModule\n\nCatsModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\nPostsModule\n\nPostsModule\n\nAppModule -->\n\nPostsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CatsModule\n                        \n                        \n                            PostsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UsersModule } from './users/users.module';\nimport { CatsModule } from './cats/cats.module';\nimport { PostsModule } from './posts/posts.module';\nimport { AuthModule } from './auth/auth.module';\n\n\n\n@Module({\n  imports: [UsersModule, CatsModule, PostsModule, AuthModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  \n  getHello(): string {\n    return 'Hello World! ddd';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { AuthService } from './providers/auth.service';\nimport { Controller } from '@nestjs/common';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(\n    /*\n     * Injecting Auth Service\n     */\n    private readonly authService: AuthService,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from '@nestjs/common';\n\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './providers/auth.service';\nimport { UsersModule } from 'src/users/users.module';\n\n@Module({\n  controllers: [AuthController],\n  providers: [AuthService],\n  imports: [forwardRef(() => UsersModule)],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isAuth\n                            \n                            \n                                    Public\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/providers/auth.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isAuth\n                        \n                    \n                \n            \n            \n                \n                        \n                    isAuth()\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(email: string, password: string, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, forwardRef } from '@nestjs/common';\n\nimport { UsersService } from 'src/users/providers/users.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    // Injecting UserService\n    @Inject(forwardRef(() => UsersService))\n    private readonly usersService: UsersService,\n  ) {}\n\n  public login(email: string, password: string, id: string) {\n    const user = this.usersService.findOneById('1234');\n    // login\n    return 'SAMPLE_TOKEN';\n  }\n\n  public isAuth() {\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Cat.html":{"url":"classes/Cat.html","title":"class - Cat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Cat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/entities/cat.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Cat {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CatsController.html":{"url":"controllers/CatsController.html","title":"controller - CatsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CatsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cats.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                cats\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCatDto: CreateCatDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/cats/cats.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCatDto\n                                            \n                                                            CreateCatDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/cats/cats.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/cats/cats.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/cats/cats.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateCatDto: UpdateCatDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/cats/cats.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCatDto\n                                            \n                                                            UpdateCatDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { CatsService } from './cats.service';\nimport { CreateCatDto } from './dto/create-cat.dto';\nimport { UpdateCatDto } from './dto/update-cat.dto';\n\n@Controller('cats')\nexport class CatsController {\n  constructor(private readonly catsService: CatsService) {}\n\n  @Post()\n  create(@Body() createCatDto: CreateCatDto) {\n    return this.catsService.create(createCatDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.catsService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.catsService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateCatDto: UpdateCatDto) {\n    return this.catsService.update(+id, updateCatDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.catsService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CatsModule.html":{"url":"modules/CatsModule.html","title":"module - CatsModule","body":"\n                   \n\n\n\n\n    Modules\n    CatsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_providers\n\n\n\n\nCatsService\n\nCatsService\n\n\n\nCatsModule\n\nCatsModule\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cats/cats.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CatsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CatsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CatsService } from './cats.service';\nimport { CatsController } from './cats.controller';\n\n@Module({\n  controllers: [CatsController],\n  providers: [CatsService],\n})\nexport class CatsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CatsService.html":{"url":"injectables/CatsService.html","title":"injectable - CatsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cats.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createCatDto: CreateCatDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cats/cats.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCatDto\n                                            \n                                                            CreateCatDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/cats/cats.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cats/cats.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cats/cats.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateCatDto: UpdateCatDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cats/cats.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCatDto\n                                            \n                                                            UpdateCatDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateCatDto } from './dto/create-cat.dto';\nimport { UpdateCatDto } from './dto/update-cat.dto';\n\n@Injectable()\nexport class CatsService {\n  create(createCatDto: CreateCatDto) {\n    return 'This action adds a new cat';\n  }\n\n  findAll() {\n    return `This action returns all cats`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} cat`;\n  }\n\n  update(id: number, updateCatDto: UpdateCatDto) {\n    return `This action updates a #${id} cat`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} cat`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCatDto.html":{"url":"classes/CreateCatDto.html","title":"class - CreateCatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/dto/create-cat.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateCatDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePostDto.html":{"url":"classes/CreatePostDto.html","title":"class - CreatePostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dtos/create-post.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                content\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                featuredImageUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                metaOptions\n                            \n                            \n                                    \n                                    \n                                    \n                                postType\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                publishOn\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                schema\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                slug\n                            \n                            \n                                    \n                                    \n                                    \n                                status\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                tags\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        featuredImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsUrl()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        metaOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreatePostMetaOptionsDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: 'array', required: false, items: undefined})@IsOptional()@IsArray()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        postType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PostType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: PostType, description: 'Possible values  'post', 'page', 'story', 'series''})@IsEnum(PostType)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        publishOn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Must be a valid timestamp in ISO8601', example: '2024-03-16T07:46:32+0000'})@IsISO8601()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        schema\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Serialize your JSON object else a validation error will be thrown'})@IsOptional()@IsJSON()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'For example 'my-url''})@IsString()@IsNotEmpty()@Matches(/^[a-z0-9]+(?:-[a-z0-9]+)*$/, {message: 'A slug should be all small letters and uses only \"-\" and without spaces. For example \"my-url\"'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         postStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: postStatus, description: 'Possible values 'draft', 'scheduled', 'review', 'published''})@IsEnum(postStatus)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsArray()@IsOptional()@IsString({each: true})@MinLength(3, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@MinLength(4)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { postStatus } from '../enums/post-status.enum';\nimport {\n  IsArray,\n  IsEnum,\n  IsISO8601,\n  IsJSON,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  IsUrl,\n  Matches,\n  MinLength,\n  ValidateNested,\n} from 'class-validator';\nimport { PostType } from '../enums/post-type.enum';\nimport { Type } from 'class-transformer';\nimport { CreatePostMetaOptionsDto } from './create-post-meta-options.dto';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class CreatePostDto {\n  @ApiProperty()\n  @IsString()\n  @MinLength(4)\n  @IsNotEmpty()\n  title: string;\n\n  @ApiProperty({\n    enum: PostType,\n    description: \"Possible values  'post', 'page', 'story', 'series'\",\n  })\n  @IsEnum(PostType)\n  @IsNotEmpty()\n  postType: PostType;\n\n  @ApiProperty({\n    description: \"For example 'my-url'\",\n  })\n  @IsString()\n  @IsNotEmpty()\n  @Matches(/^[a-z0-9]+(?:-[a-z0-9]+)*$/, {\n    message:\n      'A slug should be all small letters and uses only \"-\" and without spaces. For example \"my-url\"',\n  })\n  slug: string;\n\n  @ApiProperty({\n    enum: postStatus,\n    description: \"Possible values 'draft', 'scheduled', 'review', 'published'\",\n  })\n  @IsEnum(postStatus)\n  @IsNotEmpty()\n  status: postStatus;\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsString()\n  content?: string;\n\n  @ApiPropertyOptional({\n    description:\n      'Serialize your JSON object else a validation error will be thrown',\n  })\n  @IsOptional()\n  @IsJSON()\n  schema?: string;\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsUrl()\n  featuredImageUrl?: string;\n\n  @ApiProperty({\n    description: 'Must be a valid timestamp in ISO8601',\n    example: '2024-03-16T07:46:32+0000',\n  })\n  @IsISO8601()\n  @IsOptional()\n  publishOn?: Date;\n\n  @ApiPropertyOptional()\n  @IsArray()\n  @IsOptional()\n  @IsString({ each: true })\n  @MinLength(3, { each: true })\n  tags?: string[];\n\n  @ApiPropertyOptional({\n    type: 'array',\n    required: false,\n    items: {\n      type: 'object',\n      properties: {\n        key: {\n          type: 'string',\n        },\n        value: {\n          type: 'string',\n        },\n      },\n    },\n  })\n  @IsOptional()\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => CreatePostMetaOptionsDto)\n  metaOptions?: CreatePostMetaOptionsDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePostMetaOptionsDto.html":{"url":"classes/CreatePostMetaOptionsDto.html","title":"class - CreatePostMetaOptionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePostMetaOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dtos/create-post-meta-options.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                key\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post-meta-options.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post-meta-options.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreatePostMetaOptionsDto {\n  @IsString()\n  @IsNotEmpty()\n  key: string;\n\n  @IsNotEmpty()\n  value: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                lastName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(3)@MaxLength(96)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@MinLength(3)@MaxLength(96)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(8)@Matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/, {message: 'Minimum eight characters, at least one letter, one number and one special character'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  Matches,\n  MaxLength,\n  MinLength,\n} from 'class-validator';\n\nexport class CreateUserDto {\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(3)\n  @MaxLength(96)\n  firstName: string;\n\n  @IsString()\n  @IsOptional()\n  @MinLength(3)\n  @MaxLength(96)\n  lastName?: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(8)\n  @Matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/, {\n    message:\n      'Minimum eight characters, at least one letter, one number and one special character',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUsersParamDto.html":{"url":"classes/GetUsersParamDto.html","title":"class - GetUsersParamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUsersParamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/get-users-param.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsInt()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/get-users-param.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsInt, IsOptional } from 'class-validator';\n\nimport { Type } from 'class-transformer';\n\nexport class GetUsersParamDto {\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsInt()\n  @Type(() => Number)\n  id?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchPostDto.html":{"url":"classes/PatchPostDto.html","title":"class - PatchPostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchPostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dtos/patch-post.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreatePostDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({name: 'id', description: 'this is an id', example: 1, required: true})@IsNotEmpty()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/patch-post.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from \"@nestjs/swagger\";\nimport { CreateUserDto } from '../../users/dtos/create-user.dto';\nimport { IsInt, IsNotEmpty } from \"class-validator\";\nimport { CreatePostDto } from \"./create-post.dto\";\n\nexport class PatchPostDto extends PartialType(CreatePostDto){\n    @ApiProperty({\n        name :'id',\n        description :'this is an id',\n        example : 1,\n        required :true,\n    })\n    @IsNotEmpty()\n    @IsInt()\n    id:number\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchUserDto.html":{"url":"classes/PatchUserDto.html","title":"class - PatchUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/patch-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateUserDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateUserDto } from './create-user.dto';\nimport { PartialType } from '@nestjs/mapped-types';\n\nexport class PatchUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PostsController.html":{"url":"controllers/PostsController.html","title":"controller - PostsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PostsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/posts.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                posts\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                createPost\n                            \n                            \n                                    \n                                    Public\n                                getPosts\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                updatePost\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        createPost\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPost(createPostDto: CreatePostDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Creates a new post for the blog.'})@ApiResponse({status: 201, description: 'You get a success 201 response if the post is created successfully'})@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPostDto\n                                            \n                                                            CreatePostDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        getPosts\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPosts(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:userId?')\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        updatePost\n                        \n                    \n                \n            \n            \n                \n                        \n                    updatePost(patchPostDto: PatchPostDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'This an operation updating post'})@ApiResponse({status: 201, description: 'thas mean you have updates the post'})@Patch()\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                patchPostDto\n                                            \n                                                            PatchPostDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Patch, Post } from '@nestjs/common';\nimport { PostsService } from './providers/posts.service';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { CreatePostDto } from './dtos/create-post.dto';\nimport { PatchPostDto } from './dtos/patch-post.dto';\n\n@Controller('posts')\n@ApiTags('Posts')\nexport class PostsController {\n  constructor(\n    /*\n     *  Injecting Posts Service\n     */\n    private readonly postsService: PostsService,\n  ) {}\n\n  /*\n   * GET localhost:3000/posts/:userId\n   */\n  @Get('/:userId?')\n  public getPosts(@Param('userId') userId: string) {\n    return this.postsService.findAll(userId);\n  }\n\n  @ApiOperation({\n    summary: 'Creates a new post for the blog.',\n  })\n  @ApiResponse({\n    status: 201,\n    description:\n      'You get a success 201 response if the post is created successfully',\n  })\n  @Post()\n  public createPost(@Body() createPostDto: CreatePostDto) {\n    console.log(createPostDto);\n  }\n\n  @ApiOperation({summary : 'This an operation updating post'})\n  @ApiResponse({\n    status:201,\n    description:'thas mean you have updates the post'\n  })\n  @Patch()\n  public updatePost(@Body() patchPostDto : PatchPostDto){\n      console.log(patchPostDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostsModule.html":{"url":"modules/PostsModule.html","title":"module - PostsModule","body":"\n                   \n\n\n\n\n    Modules\n    PostsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_imports\n\n\n\ncluster_PostsModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nPostsModule\n\nPostsModule\n\nPostsModule -->\n\nUsersModule->PostsModule\n\n\n\n\n\nPostsService\n\nPostsService\n\nPostsModule -->\n\nPostsService->PostsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/posts/posts.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PostsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PostsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PostsController } from './posts.controller';\nimport { PostsService } from './providers/posts.service';\nimport { UsersModule } from 'src/users/users.module';\n\n@Module({\n  controllers: [PostsController],\n  providers: [PostsService],\n  imports: [UsersModule],\n})\nexport class PostsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostsService.html":{"url":"injectables/PostsService.html","title":"injectable - PostsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PostsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/providers/posts.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/posts/providers/posts.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/posts/providers/posts.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UsersService } from 'src/users/providers/users.service';\n\n@Injectable()\nexport class PostsService {\n  constructor(\n    /*\n     * Injecting Users Service\n     */\n    private readonly usersService: UsersService,\n  ) {}\n\n  public findAll(userId: string) {\n    const user = this.usersService.findOneById(userId);\n\n    return [\n      {\n        user: user,\n        title: 'Test Tile',\n        content: 'Test Content',\n      },\n      {\n        user: user,\n        title: 'Test Tile 2',\n        content: 'Test Content 2',\n      },\n    ];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductsController.html":{"url":"controllers/ProductsController.html","title":"controller - ProductsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                products\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('products')\nexport class ProductsController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductsModule.html":{"url":"modules/ProductsModule.html","title":"module - ProductsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductsModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/products/products.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            ProductsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductsController } from './products.controller';\n\n@Module({\n  controllers: [ProductsController]\n})\nexport class ProductsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCatDto.html":{"url":"classes/UpdateCatDto.html","title":"class - UpdateCatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/dto/update-cat.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateCatDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateCatDto } from './create-cat.dto';\n\nexport class UpdateCatDto extends PartialType(CreateCatDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                createUsers\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                getUsers\n                            \n                            \n                                    \n                                    Public\n                                patchUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        createUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUsers(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsers(getUserParamDto: GetUsersParamDto, limit: number, page: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id?')@ApiOperation({summary: 'Fetches a list of registered users on the application.'})@ApiQuery({name: 'limit', type: String, description: 'The upper limit of pages you want the pagination to return', required: false})@ApiQuery({name: 'page', type: String, description: 'The position of the page number that you want the API to return', required: false})@ApiResponse({status: 200, description: 'Users fetched successfully based on the query'})\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getUserParamDto\n                                            \n                                                            GetUsersParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        patchUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchUser(patchUserDto: PatchUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                patchUserDto\n                                            \n                                                            PatchUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         PatchUserDto\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Param,\n  Patch,\n  Post,\n  Query,\n  Body,\n  ParseIntPipe,\n  DefaultValuePipe,\n} from '@nestjs/common';\nimport { CreateUserDto } from './dtos/create-user.dto';\nimport { GetUsersParamDto } from './dtos/get-users-param.dto';\nimport { PatchUserDto } from './dtos/patch-user.dto';\nimport { UsersService } from './providers/users.service';\nimport { ApiOperation, ApiQuery, ApiResponse, ApiTags } from '@nestjs/swagger';\n\n@Controller('users')\n@ApiTags('Users')\nexport class UsersController {\n  constructor(\n    // Injecting Users Service\n    private readonly usersService: UsersService,\n  ) {}\n\n  @Get('/:id?')\n  @ApiOperation({\n    summary: 'Fetches a list of registered users on the application.'\n  })\n  @ApiQuery({\n    name: 'limit',\n    type: String,\n    description: 'The upper limit of pages you want the pagination to return',\n    required: false,\n  })\n  @ApiQuery({\n    name: 'page',\n    type: String,\n    description:\n      'The position of the page number that you want the API to return',\n    required: false,\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Users fetched successfully based on the query',\n  })\n  public getUsers(\n    @Param() getUserParamDto: GetUsersParamDto,\n    @Query('limit', new DefaultValuePipe(10), ParseIntPipe) limit: number,\n    @Query('page', new DefaultValuePipe(1), ParseIntPipe) page: number,\n  ) {\n    return this.usersService.findAll(getUserParamDto, limit, page);\n  }\n\n  @Post()\n  public createUsers(@Body() createUserDto: CreateUserDto) {\n    console.log(createUserDto instanceof CreateUserDto);\n    return 'You sent a post request to users endpoint';\n  }\n\n  @Patch()\n  public patchUser(@Body() patchUserDto: PatchUserDto) {\n    return patchUserDto;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from '@nestjs/common';\n\nimport { AuthModule } from 'src/auth/auth.module';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './providers/users.service';\n\n@Module({\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService],\n  imports: [forwardRef(() => AuthModule)],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                findAll\n                            \n                            \n                                    Public\n                                findOneById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/users.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(getUserParamDto: GetUsersParamDto, limt: number, page: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getUserParamDto\n                                            \n                                                            GetUsersParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limt\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { id: number; firstName: string; email: string; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { AuthService } from 'src/auth/providers/auth.service';\nimport { GetUsersParamDto } from '../dtos/get-users-param.dto';\nimport { Injectable, Inject, forwardRef } from '@nestjs/common';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    // Injecting Auth Service\n    @Inject(forwardRef(() => AuthService))\n    private readonly authService: AuthService,\n  ) {}\n\n  /*\n   * Method to find all the users\n   */\n  public findAll(\n    getUserParamDto: GetUsersParamDto,\n    limt: number,\n    page: number,\n  ) {\n    const isAuth = this.authService.isAuth();\n    console.log(isAuth);\n\n    return [\n      {\n        firstName: 'John',\n        email: 'john@doe.com',\n      },\n      {\n        firstName: 'Alice',\n        email: 'alice@doe.com',\n      },\n    ];\n  }\n\n  /*\n   * Find a user by ID\n   */\n  public findOneById(id: string) {\n    return {\n      id: 1234,\n      firstName: 'Alice',\n      email: 'alice@doe.com',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/providers/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/cats/cats.controller.ts\n            \n            controller\n            CatsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/cats/cats.service.ts\n            \n            injectable\n            CatsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/cats/dto/create-cat.dto.ts\n            \n            class\n            CreateCatDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cats/dto/update-cat.dto.ts\n            \n            class\n            UpdateCatDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cats/entities/cat.entity.ts\n            \n            class\n            Cat\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/posts/dtos/create-post-meta-options.dto.ts\n            \n            class\n            CreatePostMetaOptionsDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/posts/dtos/create-post.dto.ts\n            \n            class\n            CreatePostDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/posts/dtos/patch-post.dto.ts\n            \n            class\n            PatchPostDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/posts/posts.controller.ts\n            \n            controller\n            PostsController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/posts/providers/posts.service.ts\n            \n            injectable\n            PostsService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/products/products.controller.ts\n            \n            controller\n            ProductsController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dtos/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/dtos/get-users-param.dto.ts\n            \n            class\n            GetUsersParamDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/dtos/patch-user.dto.ts\n            \n            class\n            PatchUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/providers/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.23\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/mapped-types : ^2.0.6\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^8.0.7\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            postStatus   (src/.../post-status.enum.ts)\n                        \n                        \n                            PostType   (src/.../post-type.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/posts/enums/post-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        postStatus\n                    \n                \n                        \n                            \n                                 DRAFT\n                            \n                        \n                        \n                            \n                                Value : draft\n                            \n                        \n                        \n                            \n                                 SCHEDULED\n                            \n                        \n                        \n                            \n                                Value : scheduled\n                            \n                        \n                        \n                            \n                                 REVIEW\n                            \n                        \n                        \n                            \n                                Value : review\n                            \n                        \n                        \n                            \n                                 PUBLISHED\n                            \n                        \n                        \n                            \n                                Value : published\n                            \n                        \n            \n        \n\n    src/posts/enums/post-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PostType\n                    \n                \n                        \n                            \n                                 POST\n                            \n                        \n                        \n                            \n                                Value : post\n                            \n                        \n                        \n                            \n                                 PAGE\n                            \n                        \n                        \n                            \n                                Value : page\n                            \n                        \n                        \n                            \n                                 STORY\n                            \n                        \n                        \n                            \n                                Value : story\n                            \n                        \n                        \n                            \n                                 SERIES\n                            \n                        \n                        \n                            \n                                Value : series\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CatsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PostsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductsModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_providers\n\n\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCatsModule\n\nCatsModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\nPostsModule\n\nPostsModule\n\nAppModule -->\n\nPostsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nPostsModule -->\n\nUsersModule->PostsModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nCatsService\n\nCatsService\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\nPostsService\n\nPostsService\n\nPostsModule -->\n\nPostsService->PostsModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
